// Generated by CoffeeScript 1.3.3
(function() {
  var FiddleController, _ref;

  this.app = (_ref = window.app) != null ? _ref : {};

  FiddleController = (function() {

    function FiddleController() {
      this.setup();
    }

    FiddleController.prototype.setup = function() {
      this.focusAndSelect("#xpath");
      ($("#toggle")).on("click", function(e) {
        e.preventDefault();
        return app.controller.toggleFold();
      });
      return this.assignKeys();
    };

    FiddleController.prototype.toggleFold = function() {
      var $fold;
      $fold = $("#xml-document");
      $fold.toggleClass("out");
      if ($fold.hasClass("out")) {
        return this.focusAndSelect("#xdoc");
      }
    };

    FiddleController.prototype.focusAndSelect = function(field) {
      var $field;
      $field = $(field);
      return window.setTimeout(function() {
        return $field[0].select();
      }, 300);
    };

    FiddleController.prototype.assignKeys = function() {
      var controller;
      controller = this;
      return ($('#xpath')).keypress(function(event) {
        console.log(document.getSelection().focusOffset);
        switch (event.keyCode) {
          case 91:
            controller.sendCharacters('[]');
            event.preventDefault();
            return ($(this)).trigger($.Event('keydown', {
              keyCode: 37
            }));
          case 40:
            controller.sendCharacters('()');
            return event.preventDefault();
        }
      });
    };

    FiddleController.prototype.sendCharacters = function(chars) {
      var oldValue;
      oldValue = ($('#xpath')).val();
      return ($('#xpath')).val(oldValue + chars);
    };

    return FiddleController;

  })();

  $(function() {
    return app.controller = new FiddleController;
  });

}).call(this);
